{"ast":null,"code":"import _objectSpread from \"/Users/lee/Desktop/rekord/rekord/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCHING, FETCHED, SAVING, SAVED, ERROR, FETCHING_NOTE, FETCHED_NOTE, DELETING, DELETED, UPDATING, UPDATED, FETCHING_USERS, FETCHED_USERS, ADDING_USER, ADDED_USER } from '../actions';\nvar initialState = {\n  notes: [],\n  note: [],\n  fetching: false,\n  fetched: false,\n  saving: false,\n  saved: false,\n  error: null,\n  // single note\n  fetchingNote: false,\n  noteFetched: false,\n  // delete and update\n  deleting: false,\n  deleted: false,\n  updating: false,\n  updated: false\n};\nexport var notesReducer = function notesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCHING:\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case FETCHED:\n      return _objectSpread({}, state, {\n        fetched: true,\n        fetching: false,\n        notes: action.payload\n      });\n\n    case SAVING:\n      return _objectSpread({}, state, {\n        saving: true\n      });\n\n    case SAVED:\n      return _objectSpread({}, state, {\n        saving: false,\n        saved: true,\n        note: action.payload\n      });\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        fetching: false,\n        saving: false,\n        error: action.payload\n      });\n\n    case FETCHING_NOTE:\n      return _objectSpread({}, state, {\n        fetchingNote: true,\n        fetched: true\n      });\n\n    case FETCHED_NOTE:\n      return _objectSpread({}, state, {\n        noteFetched: true,\n        fetchingNote: false,\n        note: action.payload\n      });\n\n    case DELETING:\n      return _objectSpread({}, state, {\n        deleting: true\n      });\n\n    case DELETED:\n      return _objectSpread({}, state, {\n        deleting: false\n      });\n\n    case UPDATING:\n      return _objectSpread({}, state, {\n        updating: true\n      });\n\n    case UPDATED:\n      return _objectSpread({}, state, {\n        updated: true,\n        updating: false,\n        note: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/lee/Desktop/rekord/rekord/src/reducers/index.js"],"names":["FETCHING","FETCHED","SAVING","SAVED","ERROR","FETCHING_NOTE","FETCHED_NOTE","DELETING","DELETED","UPDATING","UPDATED","FETCHING_USERS","FETCHED_USERS","ADDING_USER","ADDED_USER","initialState","notes","note","fetching","fetched","saving","saved","error","fetchingNote","noteFetched","deleting","deleted","updating","updated","notesReducer","state","action","type","payload"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,aAAjD,EAAgEC,YAAhE,EAA8EC,QAA9E,EAAwFC,OAAxF,EAAiGC,QAAjG,EAA2GC,OAA3G,EAAoHC,cAApH,EAAoIC,aAApI,EAAmJC,WAAnJ,EAAgKC,UAAhK,QAAiL,YAAjL;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,MAAM,EAAE,KALS;AAMjBC,EAAAA,KAAK,EAAE,KANU;AAOjBC,EAAAA,KAAK,EAAE,IAPU;AAQjB;AACAC,EAAAA,YAAY,EAAE,KATG;AAUjBC,EAAAA,WAAW,EAAE,KAVI;AAWjB;AACAC,EAAAA,QAAQ,EAAE,KAZO;AAajBC,EAAAA,OAAO,EAAE,KAbQ;AAcjBC,EAAAA,QAAQ,EAAE,KAdO;AAejBC,EAAAA,OAAO,EAAE;AAfQ,CAArB;AAkBA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAoC;AAAA,MAAlCC,KAAkC,uEAA1Bf,YAA0B;AAAA,MAAZgB,MAAY;;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKhC,QAAL;AACA,+BAAW8B,KAAX;AAAkBZ,QAAAA,QAAQ,EAAE;AAA5B;;AACA,SAAKjB,OAAL;AACA,+BAAU6B,KAAV;AAAiBX,QAAAA,OAAO,EAAE,IAA1B;AAAgCD,QAAAA,QAAQ,EAAE,KAA1C;AAAiDF,QAAAA,KAAK,EAAEe,MAAM,CAACE;AAA/D;;AACA,SAAK/B,MAAL;AACA,+BAAW4B,KAAX;AAAkBV,QAAAA,MAAM,EAAE;AAA1B;;AACA,SAAKjB,KAAL;AACA,+BAAU2B,KAAV;AAAiBV,QAAAA,MAAM,EAAE,KAAzB;AAAgCC,QAAAA,KAAK,EAAE,IAAvC;AAA6CJ,QAAAA,IAAI,EAAEc,MAAM,CAACE;AAA1D;;AACA,SAAK7B,KAAL;AACA,+BAAW0B,KAAX;AAAkBZ,QAAAA,QAAQ,EAAE,KAA5B;AAAmCE,QAAAA,MAAM,EAAE,KAA3C;AAAkDE,QAAAA,KAAK,EAAES,MAAM,CAACE;AAAhE;;AACA,SAAK5B,aAAL;AACA,+BAAWyB,KAAX;AAAiBP,QAAAA,YAAY,EAAE,IAA/B;AAAqCJ,QAAAA,OAAO,EAAE;AAA9C;;AACA,SAAKb,YAAL;AACA,+BAAWwB,KAAX;AAAkBN,QAAAA,WAAW,EAAE,IAA/B;AAAqCD,QAAAA,YAAY,EAAE,KAAnD;AAA0DN,QAAAA,IAAI,EAAEc,MAAM,CAACE;AAAvE;;AACA,SAAK1B,QAAL;AACA,+BAAWuB,KAAX;AAAkBL,QAAAA,QAAQ,EAAE;AAA5B;;AACA,SAAKjB,OAAL;AACA,+BAAWsB,KAAX;AAAkBL,QAAAA,QAAQ,EAAE;AAA5B;;AACA,SAAKhB,QAAL;AACA,+BAAWqB,KAAX;AAAiBH,QAAAA,QAAQ,EAAE;AAA3B;;AACA,SAAKjB,OAAL;AACA,+BAAWoB,KAAX;AAAkBF,QAAAA,OAAO,EAAE,IAA3B;AAAgCD,QAAAA,QAAQ,EAAE,KAA1C;AAAiDV,QAAAA,IAAI,EAAEc,MAAM,CAACE;AAA9D;;AACA;AACA,aAAOH,KAAP;AAxBJ;AA0BH,CA3BM","sourcesContent":["import {FETCHING, FETCHED, SAVING, SAVED, ERROR, FETCHING_NOTE, FETCHED_NOTE, DELETING, DELETED, UPDATING, UPDATED, FETCHING_USERS, FETCHED_USERS, ADDING_USER, ADDED_USER} from '../actions';\n\nconst initialState = {\n    notes: [],\n    note: [],\n    fetching: false,\n    fetched: false,\n    saving: false,\n    saved: false,\n    error: null,\n    // single note\n    fetchingNote: false,\n    noteFetched: false,\n    // delete and update\n    deleting: false,\n    deleted: false,\n    updating: false,\n    updated: false\n}\n\nexport const notesReducer = ( state = initialState, action ) => {\n    switch(action.type) {\n        case FETCHING:\n        return {...state, fetching: true};\n        case FETCHED:\n        return{...state, fetched: true, fetching: false, notes: action.payload};\n        case SAVING:\n        return {...state, saving: true};\n        case SAVED:\n        return{...state, saving: false, saved: true, note: action.payload};\n        case ERROR:\n        return {...state, fetching: false, saving: false, error: action.payload};\n        case FETCHING_NOTE:\n        return {...state,fetchingNote: true, fetched: true}\n        case FETCHED_NOTE:\n        return {...state, noteFetched: true, fetchingNote: false, note: action.payload}\n        case DELETING:\n        return {...state, deleting: true}\n        case DELETED:\n        return {...state, deleting: false}\n        case UPDATING:\n        return {...state,updating: true}\n        case UPDATED:\n        return {...state, updated: true,updating: false, note: action.payload}       \n        default:\n        return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}