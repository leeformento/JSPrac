{"ast":null,"code":"import _classCallCheck from \"/Users/lee/Desktop/rekord/rekord/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lee/Desktop/rekord/rekord/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lee/Desktop/rekord/rekord/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lee/Desktop/rekord/rekord/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lee/Desktop/rekord/rekord/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lee/Desktop/rekord/rekord/src/components/SingleNote.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchNote, deleteNote, updateNote } from '../actions';\nimport Note from './Note';\nimport Edit from './Edit';\n\nvar SingleNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleNote, _Component);\n\n  function SingleNote(props) {\n    var _this;\n\n    _classCallCheck(this, SingleNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleNote).call(this, props));\n\n    _this.toggleUpdate = function () {\n      _this.setState(function (prevState) {\n        return {\n          updateActive: !prevState.updateActive\n        };\n      });\n    };\n\n    _this.toggleModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.deleteNote = function () {\n      _this.props.deleteNote(_this.props.match.params.id, _this.props.history);\n    };\n\n    _this.state = {\n      updateActive: false,\n      modal: false\n    };\n    return _this;\n  }\n\n  _createClass(SingleNote, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchNote(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.note);\n\n      if (!this.props.fetched) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"single-note-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Note, {\n        title: this.props.note.title,\n        content: this.props.note.textBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.toggleUpdate,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Button, {\n        onClick: this.toggleModal,\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Delete\"), this.state.updateActive !== false ? React.createElement(Edit, {\n        onCancel: this.toggleUpdate,\n        title: this.props.note.title,\n        content: this.props.note.textBody,\n        updateNote: this.props.updateNote,\n        id: this.props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }) : null, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Are you sure you want to delete this note?\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.deleteNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Delete\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return SingleNote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    fetching: state.fetchingNotes,\n    fetched: state.fetched,\n    note: state.note,\n    error: state.error\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  fetchNote: fetchNote,\n  deleteNote: deleteNote,\n  updateNote: updateNote\n})(SingleNote));","map":{"version":3,"sources":["/Users/lee/Desktop/rekord/rekord/src/components/SingleNote.js"],"names":["React","Component","connect","withRouter","fetchNote","deleteNote","updateNote","Note","Edit","SingleNote","props","toggleUpdate","setState","prevState","updateActive","toggleModal","modal","match","params","id","history","state","console","log","note","fetched","title","textBody","mapStateToProps","fetching","fetchingNotes","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchNote, deleteNote, updateNote } from '../actions';\nimport Note from './Note';\nimport Edit from './Edit';\n\n\n\n class SingleNote extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            updateActive: false,\n            modal: false\n        }\n    }\n\n    componentDidMount(){\n        this.props.fetchNote(this.props.match.params.id);\n    }\n\n\n    toggleUpdate = () => {\n        this.setState((prevState) => { \n            return {updateActive: !prevState.updateActive}\n        });\n    }\n\n    toggleModal = () => {\n        this.setState((prevState) => {\n            return {modal: !prevState.modal};\n        });\n    }\n     deleteNote = () => {\n        this.props.deleteNote(this.props.match.params.id, this.props.history)\n        \n    }\n\n     render() {\n        console.log(this.props.note);\n        if (!this.props.fetched){\n            return(<div></div>)\n        }\n        return (\n            <div className=\"single-note-view\">\n                 <Note title={this.props.note.title} \n                content={this.props.note.textBody} />\n                <button onClick={this.toggleUpdate} color=\"primary\">Update</button>\n                <Button onClick={this.toggleModal} color=\"danger\">Delete</Button>\n\n                {this.state.updateActive !== false\n                    ? <Edit onCancel={this.toggleUpdate} \n                    title={this.props.note.title} \n                    content={this.props.note.textBody} \n                    updateNote={this.props.updateNote}\n                     id={this.props.match.params.id} />\n                    : null\n                }\n                \n                <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Are you sure you want to delete this note?</ModalHeader>\n                    <ModalBody>\n                        <Button color=\"danger\" onClick={this.deleteNote}>Delete</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\n                    </ModalBody>\n                </Modal>\n                {/* <Link to=\"/\">Back</Link> */}\n                </div>\n        )\n    }\n}\n const mapStateToProps = state => {\n    return {\n        fetching: state.fetchingNotes,\n        fetched: state.fetched,\n        note: state.note,\n        error: state.error\n    }\n}\n export default withRouter(connect(mapStateToProps, { fetchNote, deleteNote, updateNote })( SingleNote ))"]},"metadata":{},"sourceType":"module"}