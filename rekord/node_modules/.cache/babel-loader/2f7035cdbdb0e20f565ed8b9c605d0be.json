{"ast":null,"code":"import axios from 'axios';\nexport var FETCHING = 'FETCHING';\nexport var FETCHED = 'FETCHED';\nexport var SAVING = 'SAVING';\nexport var SAVED = 'SAVED';\nexport var UPDATING = 'UPDATING';\nexport var UPDATED = 'UPDATED';\nexport var DELETING = 'DELETING';\nexport var DELETED = 'DELETED';\nexport var ERROR = 'ERROR';\nexport var FETCHING_NOTE = 'FETCHING_NOTE';\nexport var FETCHED_NOTE = 'FETCHED_NOTE';\nexport var fetchNotes = function fetchNotes() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCHING\n    });\n    axios.get('https://backend-project-lee.herokuapp.com/notes').then(function (response) {\n      dispatch({\n        type: FETCHED,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n}; // export const addNote = (note, history) => {\n//     return dispatch => {\n//         dispatch({ type: SAVING });\n//         axios.post('https://backend-project-lee.herokuapp.com/notes/addnote', {\n//             title: note.title,\n//             textBody: note.content,\n//         })\n//         .then(response => {\n//             dispatch({ type: SAVED, payload: response.data })\n//         })\n//         .then(response => history.push('/'))\n//         .catch(error => {\n//             dispatch({ type: ERROR, payload: error })\n//         })\n//  }\n// }\n\nexport var addNote = function addNote(note) {\n  return function (dispatch) {\n    dispatch({\n      type: SAVING\n    });\n    axios.post(\"https://backend-project-lee.herokuapp.com/notes/addnote\", note).then(function (response) {\n      dispatch({\n        type: SAVED,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};\nexport var fetchNote = function fetchNote(id) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCHING_NOTE\n    });\n    axios.get(\"https://backend-project-lee.herokuapp.com/notes/\".concat(id)).then(function (response) {\n      dispatch({\n        type: FETCHED_NOTE,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n}; // to do delete and update\n\nexport var deleteNote = function deleteNote(NoteId, history) {\n  return function (dispatch) {\n    dispatch({\n      type: DELETING\n    });\n    axios.delete(\"https://backend-project-lee.herokuapp.com/notes/delete/\".concat(NoteId)).then(function (response) {\n      dispatch({\n        type: DELETED,\n        payload: response.data\n      });\n    }).then(function (response) {\n      return history.push('/');\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};\nexport var updateNote = function updateNote(note) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATING\n    });\n    axios.put(\"https://backend-project-lee.herokuapp.com/notes/edit/\".concat(note.id), {\n      title: note.title,\n      textBody: note.content\n    }).then(function (response) {\n      dispatch({\n        type: UPDATED,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/lee/Desktop/rekord/rekord/src/actions/index.js"],"names":["axios","FETCHING","FETCHED","SAVING","SAVED","UPDATING","UPDATED","DELETING","DELETED","ERROR","FETCHING_NOTE","FETCHED_NOTE","fetchNotes","dispatch","type","get","then","response","payload","data","catch","error","addNote","note","post","err","fetchNote","id","deleteNote","NoteId","history","delete","push","updateNote","put","title","textBody","content"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\nexport const FETCHING = 'FETCHING';\nexport const FETCHED = 'FETCHED';\nexport const SAVING = 'SAVING';\nexport const SAVED = 'SAVED';\nexport const UPDATING = 'UPDATING';\nexport const UPDATED = 'UPDATED';\nexport const DELETING = 'DELETING';\nexport const DELETED = 'DELETED';\nexport const ERROR = 'ERROR';\nexport const FETCHING_NOTE = 'FETCHING_NOTE';\nexport const FETCHED_NOTE = 'FETCHED_NOTE';\n\n\nexport const fetchNotes = () => {\n    return dispatch => {\n         dispatch({ type: FETCHING });\n         axios\n         .get('https://backend-project-lee.herokuapp.com/notes')\n         .then(response => {\n             dispatch({ type: FETCHED, payload: response.data });\n            })\n            .catch(error => {\n                dispatch({ type: ERROR, payload: error });\n            })\n        }\n    }\n\n// export const addNote = (note, history) => {\n//     return dispatch => {\n//         dispatch({ type: SAVING });\n//         axios.post('https://backend-project-lee.herokuapp.com/notes/addnote', {\n//             title: note.title,\n//             textBody: note.content,\n//         })\n//         .then(response => {\n//             dispatch({ type: SAVED, payload: response.data })\n//         })\n//         .then(response => history.push('/'))\n//         .catch(error => {\n//             dispatch({ type: ERROR, payload: error })\n//         })\n//  }\n// }\n\nexport const addNote = note => {\n    return dispatch => {\n      dispatch({ type: SAVING });\n  \n      axios\n        .post(`https://backend-project-lee.herokuapp.com/notes/addnote`, note)\n        .then(response => {\n          dispatch({ type: SAVED, payload: response.data });\n        })\n        .catch(err => {\n          dispatch({ type: ERROR, payload: err });\n        });\n    };\n  };\n\nexport const fetchNote = id => {\n    return dispatch => {\n        dispatch({ type: FETCHING_NOTE });\n         axios.get(`https://backend-project-lee.herokuapp.com/notes/${id}`)\n            .then(response => {\n                dispatch({ type: FETCHED_NOTE, payload: response.data });\n            })\n            .catch(error => {\n                dispatch({ type: ERROR, payload: error });\n            })\n    }\n}\n\n// to do delete and update\nexport const deleteNote =  (NoteId, history) => {\n    return dispatch => {\n        dispatch ({ type: DELETING });\n        axios\n        .delete(`https://backend-project-lee.herokuapp.com/notes/delete/${NoteId}`)\n        .then(response => {\n            dispatch({ type: DELETED, payload: response.data})\n        })\n        .then(response => history.push('/'))\n        .catch(error => {\n            dispatch({type: ERROR, payload: error })\n        })\n    }\n}\n\nexport const updateNote = note => {\n    return dispatch => {\n        dispatch({ type: UPDATING});\n        axios\n        .put(`https://backend-project-lee.herokuapp.com/notes/edit/${note.id}`, {\n            title: note.title,\n            textBody: note.content\n        })\n        .then(response => {\n            dispatch({ type: UPDATED, payload: response.data})\n        })\n        .catch(error => {\n            dispatch({type: ERROR, payload: error})\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}